---
# ============================================================================
# üî• CONEX√ÉO DE SORTE - KAFKA INFRAESTRUTURA
# ============================================================================
# Data de Cria√ß√£o: 17/09/2025 √†s 04:25 BRT
# √öltima Atualiza√ß√£o: 17/09/2025 √†s 04:25 BRT
# Respons√°vel: Sistema Automatizado
# Vers√£o: 1.0.0
# ============================================================================
#
# KAFKA STANDALONE - Message Streaming Platform
# - Docker Swarm deployment
# - Overlay encrypted network para seguran√ßa
# - Named volumes com placement constraints
# - Health checks otimizados para produ√ß√£o
# - Depend√™ncia externa do Zookeeper via network
# ============================================================================

services:
  # ============================================================================
  # üî• KAFKA - Event Streaming Platform
  # ============================================================================
  kafka:
    image: confluentinc/cp-kafka:7.9.1
    hostname: conexao-kafka
    user: "1000:1000"
    init: true
    stop_grace_period: 60s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: conexao-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://conexao-kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 536870912
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 60000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 60000
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      # Security Configuration
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"
      # Secrets via Docker Secrets
      KAFKA_SASL_JAAS_CONFIG_FILE: "/run/secrets/KAFKA_JAAS_CONFIG"
      KAFKA_SSL_KEYSTORE_CREDENTIALS_FILE: "/run/secrets/KAFKA_KEYSTORE_PASSWORD"
      KAFKA_SSL_KEY_CREDENTIALS_FILE: "/run/secrets/KAFKA_SSL_KEY_PASSWORD"
    secrets:
      - KAFKA_JAAS_CONFIG
      - KAFKA_KEYSTORE_PASSWORD
      - KAFKA_SSL_KEY_PASSWORD
    networks:
      conexao-network-swarm:
        aliases:
          - conexao-kafka
          - kafka
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: [
        "CMD-SHELL",
        "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"
      ]
      interval: 45s
      timeout: 20s
      retries: 5
      start_period: 180s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      # üîó DEPEND√äNCIAS IMPL√çCITAS
      # Kafka precisa do Zookeeper ativo antes de iniciar
      # Configurado via restart_policy para aguardar depend√™ncias
      restart_policy:
        condition: on-failure
        delay: 60s  # Delay maior para aguardar Zookeeper
        max_attempts: 10  # Mais tentativas para aguardar depend√™ncias
        window: 600s  # Janela maior para estabiliza√ß√£o
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        monitor: 45s
        order: start-first
      rollback_config:
        parallelism: 1
        monitor: 45s
        order: stop-first
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

    # ==========================================================================
    # üè∑Ô∏è TRAEFIK LABELS - KAFKA MANAGEMENT (OPCIONAL)
    # ==========================================================================
    labels:
      # Metadata do servi√ßo
      - "org.opencontainers.image.title=Conex√£o de Sorte - Kafka"
      - "org.opencontainers.image.description=Event streaming platform"
      - "org.opencontainers.image.version=7.9.1"
      - "microservice.type=messaging"
      - "microservice.category=infrastructure"

# ============================================================================
# üîê SECRETS EXTERNOS (Azure Key Vault)
# ============================================================================
secrets:
  KAFKA_JAAS_CONFIG:
    external: true
    name: KAFKA_JAAS_CONFIG
  KAFKA_KEYSTORE_PASSWORD:
    external: true
    name: KAFKA_KEYSTORE_PASSWORD
  KAFKA_SSL_KEY_PASSWORD:
    external: true
    name: KAFKA_SSL_KEY_PASSWORD

# ============================================================================
# üì¶ VOLUMES EXTERNOS
# ============================================================================
volumes:
  kafka_data:
    external: true
    name: kafka_data

# ============================================================================
# üåê NETWORKS EXTERNOS
# ============================================================================
networks:
  conexao-network-swarm:
    external: true
    name: conexao-network-swarm
